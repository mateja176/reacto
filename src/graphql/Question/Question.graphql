type YesNoQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: YesNoAnswer!
  default: Boolean
}
type StringQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: StringAnswer!
  default: String
}
type StringsQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: StringsAnswer!
  default: String
}
type MultiStringsQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: MultiStringsAnswer!
  default: [String!]
}
type NumberQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: NumberAnswer!
  default: Float
}
type NumbersQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: NumbersAnswer!
  default: Float
}
type MultiNumbersQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: MultiNumbersAnswer!
  default: [Float!]
}
type FileQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: FileAnswer!
}
type FilesQuestion implements QuestionBase {
  id: ID!
  name: String!
  label: String!
  rule: String
  optional: Boolean!
  questionnaire: Questionnaire!
  answer: FilesAnswer!
}

union Question =
    YesNoQuestion
  | StringQuestion
  | StringsQuestion
  | MultiStringsQuestion
  | NumberQuestion
  | NumbersQuestion
  | MultiNumbersQuestion
  | FileQuestion
  | FilesQuestion
