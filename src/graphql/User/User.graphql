interface IUser implements NamedNode {
  id: ID!
  email: String!
  name: String!
  company: Company!
  questionnaires: [Questionnaire!]!
}

type RegularUser implements IUser {
  id: ID!
  email: String!
  name: String!
  company: Company!
  questionnaires: [Questionnaire!]!
}
type AdminUser implements IUser {
  id: ID!
  email: String!
  name: String!
  company: Company!
  questionnaires: [Questionnaire!]!
  questionnaireConfigurations: [QuestionnaireConfiguration!]!
}

union User = RegularUser | AdminUser

type UserPending implements Node {
  id: ID!
  email: String!
  role: Role!
  company: Company!
}

type Query {
  user(id: ID!): User!
}

input InviteInput {
  email: String!
  role: Role!
}
type Mutation {
  invite(input: InviteInput!): UserPending!
}
