interface IAnswer implements Node {
  id: ID!
  question: Question!
}

type YesNoAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Boolean!
}
type StringAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: String!
}
type StringsAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: String!
}
type MultiStringsAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: [String!]!
}
type NumberAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Float!
}
type NumbersAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Float!
}
type MultiNumbersAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: [Float!]!
}
type FileAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  "Absolute URL to media resource"
  answer: String!
}
type FilesAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  "Absolute URL's to media resource"
  answer: [String!]!
}

union Answer =
    YesNoAnswer
  | StringAnswer
  | StringsAnswer
  | MultiStringsAnswer
  | NumberAnswer
  | NumbersAnswer
  | MultiNumbersAnswer
  | FileAnswer
  | FilesAnswer
