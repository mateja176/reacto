interface IAnswer implements Node {
  id: ID!
  question: Question!
}

type YesNoAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Boolean!
}
type StringAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: String!
}
type StringsAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: String!
}
type MultiStringsAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: [String!]!
}
type NumberAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Float!
}
type NumbersAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: Float!
}
type MultiNumbersAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  answer: [Float!]!
}
type FileAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  "Absolute URL to media resource"
  answer: String!
}
type FilesAnswer implements Node & IAnswer {
  id: ID!
  question: Question!
  "Absolute URL's to media resource"
  answer: [String!]!
}

union Answer =
    YesNoAnswer
  | StringAnswer
  | StringsAnswer
  | MultiStringsAnswer
  | NumberAnswer
  | NumbersAnswer
  | MultiNumbersAnswer
  | FileAnswer
  | FilesAnswer

input CreateYesNoAnswerInput {
  questionId: ID!
  answer: Boolean!
}
input CreateStringAnswerInput {
  questionId: ID!
  answer: String!
}
input CreateStringsAnswerInput {
  questionId: ID!
  answer: String!
}
input CreateMultiStringsAnswerInput {
  questionId: ID!
  answer: [String!]!
}
input CreateNumberAnswerInput {
  questionId: ID!
  answer: Float!
}
input CreateNumbersAnswerInput {
  questionId: ID!
  answer: Float!
}
input CreateMultiNumbersAnswerInput {
  questionId: ID!
  answer: [Float!]!
}
input CreateFileAnswerInput {
  questionId: ID!
  answer: String!
}
input CreateFilesAnswerInput {
  questionId: ID!
  answer: [String!]!
}
type Mutation {
  createYesNoAnswer(input: CreateYesNoAnswerInput!): YesNoAnswer!
  createStringAnswer(input: CreateStringAnswerInput!): StringAnswer!
  createStringsAnswer(input: CreateStringsAnswerInput!): StringsAnswer!
  createMultiStringsAnswer(
    input: CreateMultiStringsAnswerInput!
  ): MultiStringsAnswer!
  createNumberAnswer(input: CreateNumberAnswerInput!): NumberAnswer!
  createNumbersAnswer(input: CreateNumbersAnswerInput!): NumbersAnswer!
  createMultiNumbersAnswer(
    input: CreateMultiNumbersAnswerInput!
  ): MultiNumbersAnswer!
  createFileAnswer(input: CreateFileAnswerInput!): FileAnswer!
  createFilesAnswer(input: CreateFilesAnswerInput!): FilesAnswer!
}
